namespace :irs do

  desc "IRM File Import"
  task irm_import: :environment do

    file_path = "#{Rails.root}/db/imports/6209-section-8a-2012.pdf"
    # reader = PDF::Reader.new(file_path)
    #reader = PDF::Reader.new("/media/removable/SD Card/TemplesOfBaal-11th.pdf")
    
    from_page_number, to_page_number = [1,10]
    Docsplit.extract_text(file_path, {pdf_opts: '-layout',  
      #pages: from_page_number..to_page_number, 
      output: 'tmp_text_file'})
      
      
=begin
    reader.pages.each do |page|
      #puts page.fonts
      puts page.text
      binding.pry
      #puts page.raw_content
    end
=end
    
  end
  
=begin  
903             I/B   Master File IDRS   Generated     MCC computer generated to indicate that an entity was
                      Entity Delete      Transaction   deleted by TC 020. Does not post to Master File.
904             I/B/E Notify IDRS        Generated     Generated by ECC to notify IDRS that the entity or 
=end
  desc "IRM File parse"
  task irm_file_parse: :environment do
    found = false
     trans_code, dr_cr_file, title, valid_doc_code, remarks = nil 
    File.open("#{Rails.root}/tmp_text_file/6209-section-8a-2012.txt").each_line do |l|
      r1 = Regexp.new('^\d{3}')
      puts "line = #{l}" 
     
      if l =~ r1 
      
        if found == true
          puts "save_last"
          irs_code = IrsCode.new(trans_code: trans_code) # IrsCode.find_or_create_by(trans_code: trans_code)
          irs_code.dr_cr_file = dr_cr_file
          irs_code.title = title   
          irs_code.valid_doc_code = valid_doc_code 
          irs_code.remarks =remarks
          binding.pry
        end 
           
        found=true
        trans_code, dr_cr_file, title,     valid_doc_code, remarks = 
        l[0..15].strip,    l[16..21].strip, l[22..39].strip, l[40..55].strip, l[56..-1].strip
         
      
      elsif found == true
        dr_cr_file << " " << l[16..21].try(:strip)
        title << " " << l[22..39].strip
        valid_doc_code << " " << l[40..55].strip
        remarks << " " << l[56..-1].strip
      
      elsif l !~ /^\w+/ && l !~ r1
        found = false
        puts 'this aint what we want!'       
      end
    end
  end
end



